/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.76
 * Generated at: 2023-10-31 23:29:34 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.pages.Usuario;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.List;
import model.Usuario.UsuarioVo;
import model.Usuario.UsuarioDao;

public final class ConsultarUsu_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("model.Usuario.UsuarioVo");
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("model.Usuario.UsuarioDao");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=utf-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"es\">\r\n");
      out.write("<head>\r\n");
      out.write("    <meta charset=\"UTF-8\">\r\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"");
      out.print( request.getContextPath() );
      out.write("/css/cards.css\">\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"");
      out.print( request.getContextPath() );
      out.write("/css/usuario.css\">\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"");
      out.print( request.getContextPath() );
      out.write("/css/style.css\">\r\n");
      out.write("    <title>Listado De Usuarios</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("    <div class=\"cont2\"></div>\r\n");
      out.write("        <div class=\"all\">\r\n");
      out.write("    <header>\r\n");
      out.write("        <img src=\"img/logo-removebg-preview.png\">\r\n");
      out.write("        \r\n");
      out.write("    <div class=\"menu\">\r\n");
      out.write("        <ul>\r\n");
      out.write("            <li class=\"submenu\">\r\n");
      out.write("                <a href=\"#\"><img class=\"imgbtn\" src=\"img/usuario-de-perfil.png\" ></a>\r\n");
      out.write("                <ul>\r\n");
      out.write("                    <li><a href=\"#\"><button>Perfil</button></a></li>\r\n");
      out.write("                    <li><a href=\"index.jsp\"><button>Menú</button> </a></li>\r\n");
      out.write("                    <li><a href=\"#\"><button>Salir</button> </a></li>\r\n");
      out.write("                </ul>\r\n");
      out.write("            </li>\r\n");
      out.write("        </ul>\r\n");
      out.write("    </div>\r\n");
      out.write("    \r\n");
      out.write("\r\n");
      out.write("    </header>\r\n");
      out.write("    \r\n");
      out.write("    \r\n");
      out.write("    \r\n");
      out.write("\r\n");
      out.write("    ");
      out.write("\r\n");
      out.write("    ");
 List<UsuarioVo> usuarios = null;
        try {
            usuarios= new UsuarioDao().listarUsu();
        } catch (Exception e) {
            e.printStackTrace();
        }
    
      out.write("\r\n");
      out.write("\r\n");
      out.write("    ");
      out.write("\r\n");
      out.write("    ");
 if (usuarios != null && !usuarios.isEmpty()) { 
      out.write("\r\n");
      out.write("            ");
      out.write("\r\n");
      out.write("                <div class=\"card__container\">\r\n");
      out.write("                    ");
 for (UsuarioVo usuario : usuarios) { 
      out.write("\r\n");
      out.write("                        <div class=\"card\">\r\n");
      out.write("                            <div class=\"card--img\">\r\n");
      out.write("                                <img src=\"img/icons8-usuario-100.png\" alt=\"a\" width=\"150px\" height=\"150px\">\r\n");
      out.write("                            </div>\r\n");
      out.write("                            <div class=\"card--info\">\r\n");
      out.write("                                <p class=\"card--subtittle\">TIPO DOC</p>\r\n");
      out.write("                                <p id=\"Usu_Nombre_");
      out.print( usuario.getUsu_Id() );
      out.write("\" class=\"cardUsuNombre\">");
      out.print( usuario.getUsu_Nombre() );
      out.write("</id=></p>\r\n");
      out.write("                                 <p class=\"card--subtittle\">N DOC</p>\r\n");
      out.write("                                <p id=\"Usu_Rol_");
      out.print( usuario.getUsu_Id() );
      out.write("\" class=\"cardUsuRol\">");
      out.print( usuario.getUsu_Rol() );
      out.write("</p>\r\n");
      out.write("                                <p class=\"card--subtittle\">NOM</p>\r\n");
      out.write("                                <p id=\"Usu_Contraseña_");
      out.print( usuario.getUsu_Id() );
      out.write("\" class=\"cardUsuContraseña\">");
      out.print( usuario.getUsu_Contraseña() );
      out.write("</p>\r\n");
      out.write("                                <p class=\"card--subtittle\">Apellido</p>\r\n");
      out.write("                                <p id=\"Emple_Id_");
      out.print( usuario.getUsu_Id() );
      out.write("\" class=\"cardEmpleId\">");
      out.print( usuario.getEmple_Id() );
      out.write("</p>\r\n");
      out.write("\r\n");
      out.write("                                <form action=\"Usuario\" method=\"post\">\r\n");
      out.write("                                    <input type=\"hidden\" name=\"enviar\" value=\"eliminarUsu\">\r\n");
      out.write("                                    <input type=\"hidden\" name=\"Usu_Id\" value=\"");
      out.print( usuario.getUsu_Id() );
      out.write("\">\r\n");
      out.write("                                    <button type=\"submit\" class=\"btn-delete\">Eliminar</button>\r\n");
      out.write("                                </form>\r\n");
      out.write("                            <button class=\"btncal\" data-usu-id=\"");
      out.print( usuario.getUsu_Id() );
      out.write("\">Actualizar</button>\r\n");
      out.write("                            </div>\r\n");
      out.write("                            \r\n");
      out.write("                        </div>\r\n");
      out.write("                    ");
 } 
      out.write("\r\n");
      out.write("                ");
 } else { 
      out.write("\r\n");
      out.write("                    <div class=\"card\">\r\n");
      out.write("                        <p>No se encontraron usuarios.</p>\r\n");
      out.write("                    </div>\r\n");
      out.write("                ");
 } 
      out.write("\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write("            </body>\r\n");
      out.write("            ");
 
            Boolean mostrarModal = (Boolean) session.getAttribute("mostrarModalActualizacion");
            if (mostrarModal != null && mostrarModal) {
                // Inicialmente, muestra la ventana modal
                session.setAttribute("mostrarModalActualizacion", false); // Para evitar que se muestre en futuras cargas
            
      out.write("\r\n");
      out.write("            <div id=\"myModal1\" class=\"modal1\">\r\n");
      out.write("            <div class=\"modal-content1\">\r\n");
      out.write("            <span class=\"close1\">X</span>\r\n");
      out.write("        \r\n");
      out.write("            <h2>Actualizar Cliente</h2>\r\n");
      out.write("            <form action=\"Cliente\" method=\"post\">\r\n");
      out.write("        \r\n");
      out.write("            <label for=\"Clie_Id\"> ID Cliente</label>\r\n");
      out.write("            <input type=\"text\" name=\"Clie_Id\" id=\"Clie_Id\"  placeholder=\"Ingrese El Id Del Cliente\">\r\n");
      out.write("    \r\n");
      out.write("            <label for=\"Clie_Tipo_Doc\"> Tipo De Documento</label>\r\n");
      out.write("            <input type=\"text\" name=\"Clie_Tipo_Doc\" id=\"Clie_Tipo_Doc\" placeholder=\"Ingrese El Tipo De Documento\">\r\n");
      out.write("    \r\n");
      out.write("            <label for=\"Clie_Num_Doc\"> Numero De Documento</label>\r\n");
      out.write("            <input type=\"text\" name=\"Clie_Num_Doc\" id=\"Clie_Num_Doc\"  placeholder=\"Ingrese El Numero De Documento\">\r\n");
      out.write("    \r\n");
      out.write("            <label for=\"Cliee_Nombre\"> Nombre</label>\r\n");
      out.write("            <input type=\"text\" name=\"Clie_Nombre\" id=\"Clie_Nombre\"  placeholder=\"Ingrese El Nombre Del Cliente\">\r\n");
      out.write("    \r\n");
      out.write("            <label for=\"Clie_Apellido\"> Apellido</label>\r\n");
      out.write("            <input type=\"text\" name=\"Clie_Apellido\" id=\"Clie_Apellido\"  placeholder=\"Ingrese El Apellido Del Cliente\">\r\n");
      out.write("    \r\n");
      out.write("            <label for=\"Clie_Direccion\"> Direccion</label>\r\n");
      out.write("            <input type=\"text\" name=\"Clie_Direccion\" id=\"Clie_Direccion\"  placeholder=\"Ingrese La Direccion Del Cliente\">\r\n");
      out.write("    \r\n");
      out.write("            <label for=\"Clie_Email\"> Email</label>\r\n");
      out.write("            <input type=\"text\" name=\"Clie_Email\" id=\"Clie_Email\"  placeholder=\"Ingrese El Email Del Cliente\">\r\n");
      out.write("    \r\n");
      out.write("            <button class=\"btncal\" name=\"enviar\" value=\"updateClient\">Enviar</button>\r\n");
      out.write("        \r\n");
      out.write("            </form>\r\n");
      out.write("            </div>\r\n");
      out.write("            </div>\r\n");
      out.write("            ");
 } 
      out.write("\r\n");
      out.write("\r\n");
      out.write("            <script type=\"text/javascript\" src=\"js/modal2.js\"></script>\r\n");
      out.write("            </body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
